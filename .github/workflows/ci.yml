name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  # Check what files changed to optimize workflow execution
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      react: ${{ steps.changes.outputs.react }}
      supabase: ${{ steps.changes.outputs.supabase }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            react:
              - 'src/**'
              - 'package*.json'
              - 'vite.config.ts'
              - 'vitest.config.ts'
              - 'tsconfig*.json'
            supabase:
              - 'supabase/**'
              - '.env.example'

  ci:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.react == 'true'

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
        env:
          NODE_OPTIONS: "--max-old-space-size=10240"

      - name: Cache Vite dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules/.vite
            dist
          key: ${{ runner.os }}-vite-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('vite.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-vite-

      - name: Cache TypeScript compilation
        uses: actions/cache@v4
        with:
          path: |
            **/*.tsbuildinfo
            node_modules/.cache
          key: ${{ runner.os }}-typescript-${{ hashFiles('**/tsconfig.json') }}-${{ hashFiles('src/**/*.{ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-typescript-${{ hashFiles('**/tsconfig.json') }}-
            ${{ runner.os }}-typescript-

      - name: Install dependencies
        run: npm ci
        env:
          NODE_OPTIONS: "--max-old-space-size=10240"

      - name: Run TypeScript type checking
        run: npx tsc --noEmit

      - name: Run linting
        run: npm run lint

      - name: Run tests with optimized CI configuration
        run: npm run test:ci-no-coverage
        timeout-minutes: 20
        env:
          NODE_OPTIONS: "--max-old-space-size=10240"
          CI: true
          # Additional environment variables for test stability
          NODE_ENV: test
          FORCE_COLOR: 0

      - name: Build application
        run: npm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=10240"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results.xml
          retention-days: 30

      # - name: Upload coverage reports to Codecov
      #   if: matrix.node-version == '20.x'
      #   uses: codecov/codecov-action@v5
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      #   with:
      #     fail_ci_if_error: false
      #     verbose: true
